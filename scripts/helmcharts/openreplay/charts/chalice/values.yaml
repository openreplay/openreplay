# Default values for openreplay.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "{{ .Values.global.openReplayContainerRegistry }}/chalice"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: "chalice"
fullnameOverride: "chalice-openreplay"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

securityContext:
  runAsUser: 1001
  runAsGroup: 1001
podSecurityContext:
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  fsGroupChangePolicy: "OnRootMismatch"
# podSecurityContext: {}
  # fsGroup: 2000

# securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    http: 8000
    metrics: 8888

serviceMonitor:
  enabled: true
  additionalLabels:
    release: observability
  scrapeConfigs:
    - port: metrics
      honorLabels: true
      interval: 15s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s

ingress:
  enabled: true
  className: "{{ .Values.global.ingress.controller.ingressClassResource.name }}"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    secretName: openreplay-ssl

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

env:
  captcha_server: ''
  captcha_key: ''
  async_Token: ''
  announcement_url: ''
  jwt_secret: "SetARandomStringHere"
  jwt_algorithm: HS512
  jwt_exp_delta_seconds: '2592000'
  # Enable logging for python app
  # Ref: https://stackoverflow.com/questions/43969743/logs-in-kubernetes-pod-not-showing-up
  PYTHONUNBUFFERED: '0'
  SAML2_MD_URL: ''
  idp_entityId: ''
  idp_sso_url: ''
  idp_x509cert: ''
  idp_sls_url: ''
  idp_name: ''
  idp_tenantKey: ''
  assist_secret: ''
  iceServers: ''


nodeSelector: {}

tolerations: []

affinity: {}

healthCheck:
  livenessProbe:
    httpGet:
      path: /signup
      port: 8000
    initialDelaySeconds: 120
    periodSeconds: 30
    timeoutSeconds: 15


pvc:
  # This can be either persistentVolumeClaim or hostPath.
  # In case of pvc, you'll have to provide the pvc name.
  # For example
  # name: openreplay-efs
  name: "{{ .Values.global.pvcRWXName }}"
  hostMountPath: /openreplay/storage/nfs

persistence: {}
  # # Spec of spec.template.spec.containers[*].volumeMounts
  # mounts:
  # - name: kafka-ssl
  #   mountPath: /opt/kafka/ssl
  # # Spec of spec.template.spec.volumes
  # volumes:
  # - name: kafka-ssl
  #   secret:
  #     secretName: kafka-ssl
