fromVersion: "{{ openreplay_version }}"
# Databases specific variables
postgresql: &postgres
  # For generating passwords
  # `openssl rand -hex 20`
  postgresqlPassword: "{{ postgres_db_password }}"
  postgresqlHost: "{{ postgres_endpoint }}"
  postgresqlPort: "5432"
  postgresqlUser: "{{ postgres_db_user }}"
  postgresqlDatabase: "{{ postgres_db_name }}"
  # resources:
  #   requests:
  #     memory: 256Mi
  #     cpu: 250m
  #   limits:
  #     memory: 3000Mi
  #     cpu: 2

clickhouse: {}
  # For enterpriseEdition
  # enabled: true

kafka: &kafka
  # For enterpriseEdition
  # enabled: true
  
  kafkaHost: "{{ kafka_endpoint.split(':')[0] }}"
  kafkaPort: "{{ kafka_endpoint.split(':')[-1] }}"
  kafkaUseSsl: "{{ kafka_ssl }}"

redis: &redis
  # For enterpriseEdition
  # enabled: false
  redisHost: "{{ redis_endpoint.split(':')[0] }}"
  redisPort: "{{ redis_endpoint.split(':')[-1] }}"

minio:
  global:
    minio:
      # For generating passwords
      # `openssl rand -hex 20`
      accessKey: "{{ minio_access_key }}"
      secretKey: "{{ minio_secret_key }}"

# Application specific variables
global:
  postgresql: *postgres
  kafka: *kafka
  redis: *redis
  s3:
    region: "us-east-1"
    endpoint: "http://minio.db.svc.cluster.local:9000"
    assetsBucket: "sessions-assets"
    recordingsBucket: "mobs"
    sourcemapsBucket: "sourcemaps"
    # if you're using one node installation, where
    # you're using local s3, make sure these variables
    # are same as minio.global.minio.accesskey and  secretKey
    accessKey: "{{ minio_access_key }}"
    secretKey: "{{ minio_secret_key }}"
  email:
    emailHost: '{{ email_host }}'
    emailPort: '{{ email_port }}'
    emailUser: '{{ email_user }}'
    emailPassword: '{{ email_password }}'
    emailUseTls: '{{ email_use_tls }}'
    emailUseSsl: '{{ email_use_ssl }}'
    emailSslKey: '{{ email_ssl_key }}'
    emailSslCert: '{{ email_ssl_cert }}'
    emailFrom: '{{ email_from }}'

  enterpriseEditionLicense: "{{ enterprise_edition_license }}"
  domainName: "{{ domain_name }}"

chalice:
  env:
    jwt_secret: "{{ jwt_secret_key }}"
    # captcha_server: ''
    # captcha_key: ''
    # SAML2_MD_URL: ''
    # idp_entityId: ''
    # idp_sso_url: ''
    # idp_x509cert: ''
    # idp_sls_url: ''
    # idp_name: ''
    # idp_tenantKey: ''


# If you want to override something
# chartname:
#   filedFrom chart/Values.yaml:
#     key: value

# For example:
#
# http:
#   resources:
#     limits:
#       cpu: 1024m
#       memory: 4096Mi
#     requests:
#       cpu: 512m
#       memory: 2056Mi

##  Changes to nginx
#
# nginx-ingress:
#   customServerConfigs: |
#      # Redirecting http to https
#      return 301 https://$host$request_uri;
#
