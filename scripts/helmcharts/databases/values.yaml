# Default values for databases.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}



## Child charts
redis:
  enabled: true
  fullnameOverride: redis
  usePassword: false
  cluster:
    enabled: false
  redis:
    resources:
      limits:
        cpu: 250m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 128Mi

postgresql:
  # postgresqlPassword: asayerPostgres
  fullnameOverride: postgresql
  postgresqlSharedPreloadLibraries: "pgaudit,pg_stat_statements"
  image:
    tag: 14.5.0
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 256Mi

minio:
  # global:
  #  minio:
  #    accessKey: "{{ minio_access_key }}"
  #    secretKey: "{{ minio_secret_key }}"
  fullnameOverride: minio
  enabled: true
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

kafka:
  image:
    tag: 3.3.1-debian-11-r34
  fullnameOverride: kafka
  enabled: false
  replicaCount: 2
  persistence:
    enabled: true
    size: 100Gi
  # resources:
  #   limit:
  #     memory: 4Gi
  #   requests:
  #     memory: 4Gi
  #     cpu: 2
  # metrics:
  #   jmx:
  #     enabled: true
  #   kafka:
  #     enabled: true
  #   serviceMonitor:
  #     enabled: false
  #     labels:
  #       release: observability
  # prometheusRule:
  #   enabled: false


# Enterprise dbs
clickhouse:
  image:
    tag: "22.12-alpine"
  enabled: false

postgreql:
  enabled: true

# For enterpriseEdition Only
vault:
  enabled: false
