categories:
- storage
namespace: longhorn-system
questions:
- variable: image.defaultImage
  default: "true"
  description: "Use default Longhorn images"
  label: Use Default Images
  type: boolean
  show_subquestion_if: false
  group: "Longhorn Images"
  subquestions:
  - variable: image.longhorn.manager.repository
    default: longhornio/longhorn-manager
    description: "Specify Longhorn Manager Image Repository"
    type: string
    label: Longhorn Manager Image Repository
    group: "Longhorn Images Settings"
  - variable: image.longhorn.manager.tag
    default: v1.0.2
    description: "Specify Longhorn Manager Image Tag"
    type: string
    label: Longhorn Manager Image Tag
    group: "Longhorn Images Settings"
  - variable: image.longhorn.engine.repository
    default: longhornio/longhorn-engine
    description: "Specify Longhorn Engine Image Repository"
    type: string
    label: Longhorn Engine Image Repository
    group: "Longhorn Images Settings"
  - variable: image.longhorn.engine.tag
    default: v1.0.2
    description: "Specify Longhorn Engine Image Tag"
    type: string
    label: Longhorn Engine Image Tag
    group: "Longhorn Images Settings"
  - variable: image.longhorn.ui.repository
    default:  longhornio/longhorn-ui
    description: "Specify Longhorn UI Image Repository"
    type: string
    label: Longhorn UI Image Repository
    group: "Longhorn Images Settings"
  - variable: image.longhorn.ui.tag
    default: v1.0.2
    description: "Specify Longhorn UI Image Tag"
    type: string
    label: Longhorn UI Image Tag
    group: "Longhorn Images Settings"
  - variable: image.longhorn.instanceManager.repository
    default: longhornio/longhorn-instance-manager
    description: "Specify Longhorn Instance Manager Image Repository"
    type: string
    label: Longhorn Instance Manager Image Repository
    group: "Longhorn Images Settings"
  - variable: image.longhorn.instanceManager.tag
    default: v1_20200514
    description: "Specify Longhorn Instance Manager Image Tag"
    type: string
    label: Longhorn Instance Manager Image Tag
    group: "Longhorn Images Settings"
  - variable: image.csi.attacher.repository
    default: longhornio/csi-attacher
    description: "Specify CSI attacher image repository. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Attacher Image Repository
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.attacher.tag
    default: v2.0.0
    description: "Specify CSI attacher image tag. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Attacher Image Tag
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.provisioner.repository
    default: longhornio/csi-provisioner
    description: "Specify CSI provisioner image repository. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Provisioner Image Repository
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.provisioner.tag
    default: v1.4.0
    description: "Specify CSI provisioner image tag. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Provisioner Image Tag
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.nodeDriverRegistrar.repository
    default: longhornio/csi-node-driver-registrar
    description: "Specify CSI Node Driver Registrar image repository. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Node Driver Registrar Image Repository
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.nodeDriverRegistrar.tag
    default: v1.2.0
    description: "Specify CSI Node Driver Registrar image tag. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Node Driver Registrar Image Tag
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.resizer.repository
    default: longhornio/csi-resizer
    description: "Specify CSI Driver Resizer image repository. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Driver Resizer Image Repository
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.resizer.tag
    default: v0.3.0
    description: "Specify CSI Driver Resizer image tag. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Driver Resizer Image Tag
    group: "Longhorn CSI Driver Images"
  - variable: image.csi.snapshotter.tag
    default: v2.1.1
    description: "Specify CSI Driver Snapshotter image tag. Leave blank to autodetect."
    type: string
    label: Longhorn CSI Driver Snapshotter Image Tag
    group: "Longhorn CSI Driver Images"
- variable: privateRegistry.registryUrl
  label: Private registry URL
  description: "URL of private registry. Leave blank to apply system default registry."
  group: "Private Registry Settings"
  type: string
  default: ""
- variable: privateRegistry.registryUser
  label: Private registry user
  description: "User used to authenticate to private registry"
  group: "Private Registry Settings"
  type: string
  default: ""
- variable: privateRegistry.registryPasswd
  label: Private registry password
  description: "Password used to authenticate to private registry"
  group: "Private Registry Settings"
  type: password
  default: ""
- variable: longhorn.default_setting
  default: "false"
  description: "Customize the default settings before installing Longhorn for the first time. This option will only work if the cluster hasn't installed Longhorn."
  label: "Customize Default Settings"
  type: boolean
  show_subquestion_if: true
  group: "Longhorn Default Settings"
  subquestions:
  - variable: defaultSettings.registrySecret
    label: Private registry secret
    description: "The Kubernetes Secret name"
    group: "Longhorn Default Settings"
    type: string
    default: ""
  - variable: csi.kubeletRootDir
    default:
    description: "Specify kubelet root-dir. Leave blank to autodetect."
    type: string
    label: Kubelet Root Directory
    group: "Longhorn CSI Driver Settings"
  - variable: csi.attacherReplicaCount
    type: int
    default:
    min: 1
    max: 10
    description: "Specify replica count of CSI Attacher. By default 3."
    label: Longhorn CSI Attacher replica count
    group: "Longhorn CSI Driver Settings"
  - variable: csi.provisionerReplicaCount
    type: int
    default:
    min: 1
    max: 10
    description: "Specify replica count of CSI Provisioner. By default 3."
    label: Longhorn CSI Provisioner replica count
    group: "Longhorn CSI Driver Settings"
  - variable: csi.resizerReplicaCount
    type: int
    default:
    min: 1
    max: 10
    description: "Specify replica count of CSI Resizer. By default 3."
    label: Longhorn CSI Resizer replica count
    group: "Longhorn CSI Driver Settings"
  - variable: csi.snapshotterReplicaCount
    type: int
    default:
    min: 1
    max: 10
    description: "Specify replica count of CSI Snapshotter. By default 3."
    label: Longhorn CSI Snapshotter replica count
    group: "Longhorn CSI Driver Settings"
  - variable: persistence.defaultClass
    default: "true"
    description: "Set as default StorageClass"
    group: "Longhorn CSI Driver Settings"
    type: boolean
    required: true
    label: Default Storage Class
  - variable: persistence.reclaimPolicy
    default: "Delete"
    description: "Define reclaim policy (Retain or Delete)"
    group: "Longhorn CSI Driver Settings"
    type: string
    required: true
    label: Storage Class Retain Policy
  - variable: persistence.defaultClassReplicaCount
    description: "Set replica count for default StorageClass"
    group: "Longhorn CSI Driver Settings"
    type: int
    default: 3
    min: 1
    max: 10
    label: Default Storage Class Replica Count
  - variable: defaultSettings.backupTarget
    label: Backup Target
    description: "The endpoint used to access the backupstore. NFS and S3 are supported."
    group: "Longhorn Default Settings"
    type: string
    default:
  - variable: defaultSettings.backupTargetCredentialSecret
    label: Backup Target Credential Secret
    description: "The name of the Kubernetes secret associated with the backup target."
    group: "Longhorn Default Settings"
    type: string
    default:
  - variable: defaultSettings.createDefaultDiskLabeledNodes
    label: Create Default Disk on Labeled Nodes
    description: 'Create default Disk automatically only on Nodes with the label "node.longhorn.io/create-default-disk=true" if no other disks exist. If disabled, the default disk will be created on all new nodes when each node is first added.'
    group: "Longhorn Default Settings"
    type: boolean
    default: "false"
  - variable: defaultSettings.defaultDataPath
    label: Default Data Path
    description: 'Default path to use for storing data on a host. By default "/var/lib/longhorn/"'
    group: "Longhorn Default Settings"
    type: string
    default: "/var/lib/longhorn/"
  - variable: defaultSettings.replicaSoftAntiAffinity
    label: Replica Node Level Soft Anti-Affinity
    description: 'Allow scheduling on nodes with existing healthy replicas of the same volume. By default false.'
    group: "Longhorn Default Settings"
    type: boolean
    default: "false"
  - variable: defaultSettings.storageOverProvisioningPercentage
    label: Storage Over Provisioning Percentage
    description: "The over-provisioning percentage defines how much storage can be allocated relative to the hard drive's capacity. By default 200."
    group: "Longhorn Default Settings"
    type: int
    min: 0
    default: 200
  - variable: defaultSettings.storageMinimalAvailablePercentage
    label: Storage Minimal Available Percentage
    description: "If the minimum available disk capacity exceeds the actual percentage of available disk capacity, the disk becomes unschedulable until more space is freed up. By default 25."
    group: "Longhorn Default Settings"
    type: int
    min: 0
    max: 100
    default: 25
  - variable: defaultSettings.upgradeChecker
    label: Enable Upgrade Checker
    description: 'Upgrade Checker will check for new Longhorn version periodically. When there is a new version available, a notification will appear in the UI. By default true.'
    group: "Longhorn Default Settings"
    type: boolean
    default: "true"
  - variable: defaultSettings.defaultReplicaCount
    label: Default Replica Count
    description: "The default number of replicas when a volume is created from the Longhorn UI. For Kubernetes configuration, update the `numberOfReplicas` in the StorageClass. By default 3."
    group: "Longhorn Default Settings"
    type: int
    min: 1
    max: 20
    default: 3
  - variable: defaultSettings.guaranteedEngineCPU
    label: Guaranteed Engine CPU
    description: 'Allow Longhorn Instance Managers to have guaranteed CPU allocation. The value is how many CPUs should be reserved for each Engine/Replica Instance Manager Pod created by Longhorn. For example, 0.1 means one-tenth of a CPU. This will help maintain engine stability during high node workload. It only applies to the Engine/Replica Manager Pods created after the setting took effect.
WARNING: After this setting is changed, all the instance managers on all the nodes will be automatically restarted.
WARNING: DO NOT CHANGE THIS SETTING WITH ATTACHED VOLUMES.
By default 0.25.'
    group: "Longhorn Default Settings"
    type: float
    default: 0.25
  - variable: defaultSettings.defaultLonghornStaticStorageClass
    label: Default Longhorn Static StorageClass Name
    description: "The 'storageClassName' is given to PVs and PVCs that are created for an existing Longhorn volume. The StorageClass name can also be used as a label, so it is possible to use a Longhorn StorageClass to bind a workload to an existing PV without creating a Kubernetes StorageClass object. By default 'longhorn-static'."
    group: "Longhorn Default Settings"
    type: string
    default: "longhorn-static"
  - variable: defaultSettings.backupstorePollInterval
    label: Backupstore Poll Interval
    description: "In seconds. The backupstore poll interval determines how often Longhorn checks the backupstore for new backups. Set to 0 to disable the polling. By default 300."
    group: "Longhorn Default Settings"
    type: int
    min: 0
    default: 300
  - variable: defaultSettings.taintToleration
    label: Kubernetes Taint Toleration
    description: 'To dedicate nodes to store Longhorn replicas and reject other general workloads, set tolerations for Longhorn and add taints for the storage nodes. All Longhorn volumes should be detached before modifying toleration settings. We recommend setting tolerations during Longhorn deployment because the Longhorn system cannot be operated during the update. Multiple tolerations can be set here, and these tolerations are separated by semicolon. For example, `key1=value1:NoSchedule; key2:NoExecute`. Because `kubernetes.io` is used as the key of all Kubernetes default tolerations, it should not be used in the toleration settings.
WARNING: DO NOT CHANGE THIS SETTING WITH ATTACHED VOLUMES.'
    group: "Longhorn Default Settings"
    type: string
    default: ""
  - variable: defaultSettings.priorityClass
    label: Priority Class
    description: "The name of the Priority Class to set on the Longhorn workloads. This can help prevent Longhorn workloads from being evicted under Node Pressure. WARNING: DO NOT CHANGE THIS SETTING WITH ATTACHED VOLUMES."
    group: "Longhorn Default Settings"
    type: string
    default: ""
  - variable: defaultSettings.autoSalvage
    label: Automatic salvage
    description: "If enabled, volumes will be automatically salvaged when all the replicas become faulty e.g. due to network disconnection. Longhorn will try to figure out which replica(s) are usable, then use them for the volume. By default true."
    group: "Longhorn Default Settings"
    type: boolean
    default: "true"
  - variable: defaultSettings.disableSchedulingOnCordonedNode
    label: Disable Scheduling On Cordoned Node
    description: "Disable Longhorn manager to schedule replica on Kubernetes cordoned node. By default true."
    group: "Longhorn Default Settings"
    type: boolean
    default: "true"
  - variable: defaultSettings.replicaZoneSoftAntiAffinity
    label: Replica Zone Level Soft Anti-Affinity
    description: "Allow scheduling new Replicas of Volume to the Nodes in the same Zone as existing healthy Replicas. Nodes don't belong to any Zone will be treated as in the same Zone. By default true."
    group: "Longhorn Default Settings"
    type: boolean
    default: "true"
  - variable: defaultSettings.volumeAttachmentRecoveryPolicy
    label: Volume Attachment Recovery Policy
    description: "Defines the Longhorn action when a Volume is stuck with a Deployment Pod on a failed node. `wait` leads to the deletion of the volume attachment as soon as the pods deletion time has passed. `never` is the default Kubernetes behavior of never deleting volume attachments on terminating pods. `immediate` leads to the deletion of the volume attachment as soon as all workload pods are pending. By default wait."
    group: "Longhorn Default Settings"
    type: enum
    options:
      - "wait"
      - "never"
      - "immediate"
    default: "wait"
  - variable: defaultSettings.mkfsExt4Parameters
    label: Custom mkfs.ext4 parameters
    description: "Allows setting additional filesystem creation parameters for ext4. For older host kernels it might be necessary to disable the optional ext4 metadata_csum feature by specifying `-O ^64bit,^metadata_csum`."
    group: "Longhorn Default Settings"
    type: string
- variable: ingress.enabled
  default: "false"
  description: "Expose app using Layer 7 Load Balancer - ingress"
  type: boolean
  group: "Services and Load Balancing"
  label: Expose app using Layer 7 Load Balancer
  show_subquestion_if: true
  subquestions:
  - variable: ingress.host
    default: "xip.io"
    description: "layer 7 Load Balancer hostname"
    type: hostname
    required: true
    label: Layer 7 Load Balancer Hostname
- variable: service.ui.type
  default: "Rancher-Proxy"
  description: "Define Longhorn UI service type"
  type: enum
  options:
    - "ClusterIP"
    - "NodePort"
    - "LoadBalancer"
    - "Rancher-Proxy"
  label: Longhorn UI Service
  show_if: "ingress.enabled=false"
  group: "Services and Load Balancing"
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: service.ui.nodePort
    default: ""
    description: "NodePort port number(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    show_if: "service.ui.type=NodePort||service.ui.type=LoadBalancer"
    label: UI Service NodePort number
- variable: enablePSP
  default: "true"
  description: "Setup a pod security policy for Longhorn workloads."
  label: Pod Security Policy
  type: boolean
  group: "Other Settings"