---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-migration-script
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
data:
  pgmigration.sh: |-
    set -x

    function chalice_migration() {
      
    }

    function migration() {
        ls -la /opt/openreplay/openreplay
        db=$1
        old_version=$2

        if [[ old_version == {{ .Chart.AppVersion }} ]]; then
            echo "No application version change. Not upgrading."
            exit 0
        fi
        chalice

        cd /opt/openreplay/openreplay/scripts/helm
        migration_versions=(`ls -l db/init_dbs/$db | grep -E ^d | awk -v number=${old_version} '$NF > number {print $NF}' | grep -v create`)
        echo $migration_versions
    }

    function init(){
        echo init db
    }

    # migration.sh true/false chalice
    case "$1" in
        "false")
            init
            ;;
        "true")
            migration $2 {{ .Chart.AppVersion }}
            ;;
        *)
            echo "Unknown operation for db migration; exiting."
            exit 1
            ;;
    esac

---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-migrate
  labels:
    app: postgresql
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: postgresqlMigrate
    spec:
      initContainers:
      - name: git
        image: alpine/git
        command:
          - git
        args:
          - clone
          - https://github.com/openreplay/openreplay
          - -b
          - {{ .Chart.AppVersion }}
          - /opt/openreplay/openreplay
        volumeMounts:
        - name: shared
          mountPath: /opt/openreplay
      containers:
      - name: postgres
        image: bitnami/postgresql:13.3.0-debian-10-r53
        command: 
        - /bin/bash
        - /opt/migration.sh
        - "{{ .Release.IsUpgrade }}"
        volumeMounts:
        - name: shared
          mountPath: /opt/openreplay
        - name: pgmigrationscript
          mountPath: /opt/migration.sh
          subPath: pgmigration.sh
      - name: clickhouse
        image: yandex/clickhouse-server:20.9
        command: 
        - /bin/bash
        - /opt/migration.sh
        - "{{ .Release.IsUpgrade }}"
        volumeMounts:
        - name: shared
          mountPath: /opt/openreplay
        - name: clickhousemigrationscript
          mountPath: /opt/migration.sh
          subPath: pgmigration.sh
      - name: kafka
        image: bitnami/kafka:2.6.0-debian-10-r30
        command: 
        - /bin/bash
        - /opt/migration.sh
        - "{{ .Release.IsUpgrade }}"
        volumeMounts:
        - name: shared
          mountPath: /opt/openreplay
        - name: kafkamigrationscript
          mountPath: /opt/migration.sh
          subPath: pgmigration.sh
      volumes:
      - name: clickhousemigrationscript
        configMap:
          name: db-migration-script
      - name: kafkamigrationscript
        configMap:
          name: db-migration-script
      - name: pgmigrationscript
        configMap:
          name: db-migration-script
      - name: shared
        emptyDir: {}
      restartPolicy: Never
